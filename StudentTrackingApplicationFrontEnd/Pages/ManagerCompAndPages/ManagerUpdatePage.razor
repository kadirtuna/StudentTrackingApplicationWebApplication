@page "/ManagerUpdate"
@page "/ManagerUpdate/{ManagerId:int}"
@inject IManagerService ManagerService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<PageTitle>Manager Update</PageTitle>
<h3>Manager Update</h3>

<AuthorizeView>
    <Authorized>
        <table class="table">
            <thead>
            <th>Manager Id</th>
            <th>First Name</th>
            <th>Surname</th>
            <th>UserName</th>
            <th>E-Mail</th>
            <th>Telephone Number</th>
            </thead>
            <tbody>
                <tr>
                    <td>@firstManager.ManagerId</td>
                    <td>@firstManager.ManagerName</td>
                    <td>@firstManager.ManagerSurname</td>
                    <td>@firstManager.ManagerUserName</td>
                    <td>@firstManager.ManagerEmail</td>
                    <td>@firstManager.ManagerPhone</td>
                </tr>
            </tbody>
        </table>
        <p></p>
        <EditForm Model="filledCreateManagerDto" OnSubmit="(() => UpdateManager(firstManager.ManagerId, filledCreateManagerDto))" Context="ManagerUpdatePage">
            <p></p>
            <label for="ManagerName">Name:</label>
            <InputText id="ManagerName" @bind-Value=filledCreateManagerDto.ManagerName> </InputText>
            <p></p>
            <label for="ManagerSurname">Surname:</label>
            <InputText id="ManagerSurname" @bind-Value=filledCreateManagerDto.ManagerSurname></InputText>
            <p></p>
            <label for="ManagerEmail">E-Mail:</label>
            <InputText id="ManagerEmail" @bind-Value=filledCreateManagerDto.ManagerEmail></InputText>
            <p></p>
            <label for="ManagerPhone">Phone Number: </label>
            <InputText id="ManagerPhone" @bind-Value=filledCreateManagerDto.ManagerPhone></InputText>
            <p></p>
            <button type="submit" class="btn btn-primary">Update</button>
        </EditForm>
    </Authorized>
    <NotAuthorized>
        <span>You're not logged in as an Admin or a Manager!</span>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public int ManagerId { get; set; } = 0;
    Manager firstManager = new Manager();
    Manager Manager = new Manager();
    CreateManagerDto filledCreateManagerDto = new CreateManagerDto();

    protected override async Task OnInitializedAsync()
    {
        firstManager = await ManagerService.GetManagerById(ManagerId);
        filledCreateManagerDto.ManagerName = firstManager.ManagerName;
        filledCreateManagerDto.ManagerSurname = firstManager.ManagerSurname;
        filledCreateManagerDto.ManagerEmail = firstManager.ManagerEmail;
        filledCreateManagerDto.ManagerPhone = firstManager.ManagerPhone;
        Manager = firstManager;

        await AuthStateProvider.GetAuthenticationStateAsync();
    }

    async Task UpdateManager(int managerId, CreateManagerDto createManagerDto)
    {
        await ManagerService.Update(managerId, createManagerDto);
        NavigationManager.NavigateTo("/managers");
    }
}